stages:
  - build
  - test
  - package
  - deploy
  - release
  - after_script          

before_script:
  - echo "single ...."

after_jobs:
  stage: after_script
  script:
    - echo "after script...."
  

build-job:
  stage: build
  before_script:
    - echo "vorher"
  script:
    - ls
    - echo "Compiling the code..."
    - echo "Compile complete."
  after_script:
    - "..."

unit-test-job:   
  stage: test    
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 1
    - echo "Code coverage is 90%"

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 1
    - echo "No lint issues found."

package-content-job:   
  stage: package
  script:
    - echo "Packaging all *.htm* files into content.zip"
    - zip -r content.zip *.htm*
    - echo "PACK_JOB_ID=${CI_JOB_ID}" > .env
  artifacts:
    reports:
      dotenv: .env
    paths:
      - content.zip   
  only:
    - tags

create-release-job:
  stage: release
  script:
    - echo "Creating release"
    - python3 /opt/releaser/release.py ${CI_JOB_TOKEN} ${PACK_JOB_ID} ${CI_PROJECT_ID} ${CI_COMMIT_TAG} ${CI_PROJECT_URL}
  only:
    - tags

get-new-version-job:   
  stage: deploy
  only:
    - main
  except:
    - tags
  script:
    - echo "Fetching newest version..."
    - |
      response=$(curl -s -X GET "https://needful-apps.de:8080/nextversion?app_id=4&major=1&minor=25" \
        -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mjc2MDg2MTQsImlzcyI6InBhdGNocGlsb3QiLCJzdWIiOiJoYWJpY2h0c3dhbGQiLCJyb2xlIjp7ImlkIjoxLCJuYW1lIjoiYWRtaW4ifX0.i_1iNqdgaIcBa9cuUQnvqNR6lKZMEWpBwg5lh2SxffQ")
      version=$(echo $response | jq -r '.version')
      echo "Fetched version: $version"
    - echo "Tagging current commit with version $version"
    - git tag "$version"
    - git push https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.needful-apps.de/Schulung/rumors.git "$version"
    - echo "Deploying application..."
    - curl -X POST "http://automation.needful-apps.de/git-pull"
    - echo "Application successfully deployed."
    - echo "Informing version service with new version $version"
    - |
      curl -X POST "https://needful-apps.de:8080/version" \
        -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mjc2MDg2MTQsImlzcyI6InBhdGNocGlsb3QiLCJzdWIiOiJoYWJpY2h0c3dhbGQiLCJyb2xlIjp7ImlkIjoxLCJuYW1lIjoiYWRtaW4ifX0.i_1iNqdgaIcBa9cuUQnvqNR6lKZMEWpBwg5lh2SxffQ" \
        -H "Content-Type: application/json" \
        -d '{
              "version": "'"$version"'",
              "app_id": 4,
              "instruction": "have a good thyme",
              "relies_on_version": "current"
            }'
    - echo "Version information sent successfully!"


