stages:          
  - build
  - test
  - deploy

build-job:      
  script:
    - ls
    - echo "Compiling the code..."
    - echo "Compile complete."

unit-test-job:   
  stage: test    
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 1
    - echo "Code coverage is 90%"

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 1
    - echo "No lint issues found."

get-new-version-job:   
  stage: deploy
  script:
    - echo "Fetching newest version..."
    - |
      response=$(curl -s -X GET "https://needful-apps.de:8080/nextversion?app_id=4&major=1&minor=25" \
        -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mjc2MDg2MTQsImlzcyI6InBhdGNocGlsb3QiLCJzdWIiOiJoYWJpY2h0c3dhbGQiLCJyb2xlIjp7ImlkIjoxLCJuYW1lIjoiYWRtaW4ifX0.i_1iNqdgaIcBa9cuUQnvqNR6lKZMEWpBwg5lh2SxffQ")
      version=$(echo $response | jq -r '.version')
      echo "Fetched version: $version"
    - echo "Tagging current commit with version $version"
    - git config --global user.email "ci@needful-apps.de"
    - git config --global user.name "CI Pipeline"
    - sleep 1
    - if git rev-parse "$version" >/dev/null 2>&1; then
        echo "Tag $version already exists, removing it...";
        git tag -d "$version";
        git push origin :refs/tags/"$version";
      fi
    - sleep 1
    - git tag "$version"
    - sleep 1
    - git push https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.needful-apps.de/Schulung/rumors.git "$version"
    - echo "Deploying application..."
    - sleep 1
    - curl -X POST "http://automation.needful-apps.de/git-pull"
    - echo "Application successfully deployed."
    - echo "Informing version service with new version $version"
    - sleep 1
    - |
      curl -X POST "https://needful-apps.de:8080/version" \
        -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mjc2MDg2MTQsImlzcyI6InBhdGNocGlsb3QiLCJzdWIiOiJoYWJpY2h0c3dhbGQiLCJyb2xlIjp7ImlkIjoxLCJuYW1lIjoiYWRtaW4ifX0.i_1iNqdgaIcBa9cuUQnvqNR6lKZMEWpBwg5lh2SxffQ" \
        -H "Content-Type: application/json" \
        -d '{
              "version": "'"$version"'",
              "app_id": 4,
              "instruction": "have a good thyme",
              "relies_on_version": "current"
            }'
    - echo "Version information sent successfully!"


